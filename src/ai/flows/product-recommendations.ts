// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Provides AI-driven product recommendations based on a given product's description.
 *
 * - getProductRecommendations - A function that takes a product description and returns a list of recommended products.
 * - ProductRecommendationsInput - The input type for the getProductRecommendations function.
 * - ProductRecommendationsOutput - The return type for the getProductRecommendations function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ProductRecommendationsInputSchema = z.object({
  productDescription: z.string().describe('The description of the product for which to find recommendations.'),
  existingProducts: z.array(z.string()).describe('The list of existing product names to be recommended.'),
});
export type ProductRecommendationsInput = z.infer<typeof ProductRecommendationsInputSchema>;

const ProductRecommendationsOutputSchema = z.object({
  recommendedProducts: z.array(z.string()).describe('A list of recommended product names based on the input product description.'),
});
export type ProductRecommendationsOutput = z.infer<typeof ProductRecommendationsOutputSchema>;

export async function getProductRecommendations(input: ProductRecommendationsInput): Promise<ProductRecommendationsOutput> {
  return productRecommendationsFlow(input);
}

const productRecommendationsPrompt = ai.definePrompt({
  name: 'productRecommendationsPrompt',
  input: {schema: ProductRecommendationsInputSchema},
  output: {schema: ProductRecommendationsOutputSchema},
  prompt: `You are a helpful shopping assistant that recommends products based on a product description.

Given the following product description:

"""{{productDescription}}"""

And the following list of available product names:

{{#each existingProducts}}
- "{{this}}"
{{/each}}

Recommend a list of product names that are similar or related to the product description. Only recommend products from the available product list.
If the product is very specific, or the product names are clearly unrelated, return an empty list.  Be conservative in your recommendations.
Ensure that the product names you return are an exact match from the list of available products.

Output the product recommendations as a simple JSON array of strings.`,
});

const productRecommendationsFlow = ai.defineFlow(
  {
    name: 'productRecommendationsFlow',
    inputSchema: ProductRecommendationsInputSchema,
    outputSchema: ProductRecommendationsOutputSchema,
  },
  async input => {
    const {output} = await productRecommendationsPrompt(input);
    return output!;
  }
);
