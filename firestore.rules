rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Products: Public can read, admins can write
    match /products/{productId} {
      allow read: if true;
      allow create, write, delete: if isAdmin();
    }

    // Categories: Public can read, admins can write
    match /categories/{categoryId} {
      allow read: if true;
      allow create, write, delete: if isAdmin();
    }

    // Users: Users can read/update their own profile, admins can manage all users
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isAdmin();
      allow create, delete: if isAdmin();
    }

    // Orders: Users can create their own orders and read them. Admins can read all orders.
    match /orders/{orderId} {
      allow create: if request.auth.uid != null;
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      allow update, delete: if isAdmin(); // Admins can manage orders
    }
  }
}